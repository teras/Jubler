/*
 * (c) 2005-2023 by Panayotis Katsaloulis
 * SPDX-License-Identifier: AGPL-3.0-only
 * This file is part of Jubler.
 */

package com.panayotis.jubler.tools.translate.azure;

import javax.swing.*;
import javax.swing.event.HyperlinkEvent;
import java.awt.*;

import static com.panayotis.jubler.i18n.I18N.__;

public class AzureTranslateConfigJ extends javax.swing.JDialog {
    private static final String HELP = "<html><body>" + __("In order to use Azure Translation service, you need to provide some parameters.\nFor more info see here: %1\n\nNote:\nPin is not saved and needed to be provided every time you launch Jubler.\nIt is needed to encrypt your Azure key.").replace("%1", "<a href=\"https://www.jubler.org/azure.html\">https://www.jubler.org/azure.html</a>").replace("\n", "<br/>") + "</body></html>";

    private boolean acceptIsSelected = false;
    private boolean keyWasEntered = false;

    /**
     * Creates new form AzureTranslateConfigJ
     */
    public AzureTranslateConfigJ(Frame parent, String url, String region) {
        super(parent);
        initComponents();
        baseUrlTF.setText(url);
        keyTF.setText("****************");
        regionTF.setText(region);
        Info.addHyperlinkListener(e -> {
            if (e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
                try {
                    Desktop.getDesktop().browse(e.getURL().toURI());
                } catch (Exception ignored) {
                }
            }
        });
        setLocationRelativeTo(parent);
    }

    public String getBaseUrl() {
        return baseUrlTF.getText().trim();
    }

    public String getEncryptedKey() {
        return keyTF.getText().trim();
    }

    public String getRegion() {
        return regionTF.getText().trim();
    }

    public String requestPassword() {
        JPasswordField pwd = new JPasswordField();

        String password = JOptionPane.showInputDialog(this, __("Enter your Azure PIN to encrypt/decrypt your key"), __("Azure PIN"), JOptionPane.PLAIN_MESSAGE);
        if (password == null || password.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, __("PIN is required to encrypt your key"), __("Azure PIN"), JOptionPane.ERROR_MESSAGE);
            return null;
        }
        return password.trim();
    }

    private String checkValid() {
        if (getBaseUrl().length() < 2)
            return __("Base URL is too small");
        if (keyTF.getText().trim().length() < 2)
            return __("Key is too small");
        if (getRegion().length() < 2)
            return __("Region is too small");
        return null;
    }

    public boolean isAccepted() {
        return acceptIsSelected;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        baseUrlTF = new javax.swing.JTextField();
        keyTF = new javax.swing.JTextField();
        regionTF = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        acceptB = new javax.swing.JButton();
        cancelB = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Info = new javax.swing.JEditorPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setModal(true);

        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 8, 5));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new java.awt.GridLayout(0, 1));

        jLabel1.setText(__("Base URL"));
        jPanel3.add(jLabel1);

        jLabel2.setText(__("Subscription Key"));
        jPanel3.add(jLabel2);

        jLabel3.setText(__("Region"));
        jPanel3.add(jLabel3);

        jPanel2.add(jPanel3, java.awt.BorderLayout.WEST);

        jPanel4.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 12, 0, 0));
        jPanel4.setLayout(new java.awt.GridLayout(0, 1));

        baseUrlTF.setColumns(40);
        jPanel4.add(baseUrlTF);
        jPanel4.add(keyTF);
        jPanel4.add(regionTF);

        jPanel2.add(jPanel4, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel2, java.awt.BorderLayout.NORTH);

        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 15, 10));

        acceptB.setText(__("Accept"));
        acceptB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptBActionPerformed(evt);
            }
        });
        jPanel1.add(acceptB);

        cancelB.setText(__("Cancel"));
        cancelB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBActionPerformed(evt);
            }
        });
        jPanel1.add(cancelB);

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        Info.setEditable(false);
        Info.setContentType("text/html"); // NOI18N
        Info.setText(HELP);
        jScrollPane2.setViewportView(Info);

        getContentPane().add(jScrollPane2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void acceptBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptBActionPerformed
        String valid = checkValid();
        if (valid == null) {
            acceptIsSelected = true;
            setVisible(false);
        } else {
            JOptionPane.showMessageDialog(this, valid, __("Invalid configuration"), JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_acceptBActionPerformed

    private void cancelBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBActionPerformed
        acceptIsSelected = false;
        setVisible(false);
    }//GEN-LAST:event_cancelBActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JEditorPane Info;
    private javax.swing.JButton acceptB;
    private javax.swing.JTextField baseUrlTF;
    private javax.swing.JButton cancelB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField keyTF;
    private javax.swing.JTextField regionTF;
    // End of variables declaration//GEN-END:variables
}
